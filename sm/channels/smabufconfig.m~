function lenrate = smabufconfig(instruments, npoints, rate, cntrl)
%lenrate = smabufconfig(instruments, npoints, rate, cntrl)
% Set number of datapoints and samplerate for instruments.
% Instruments can be an index vector or string array. 
% npoints and rate are updated for each instrument,
% so make sure no inconsistencies result - there should be only
% one "picky" instrument, and it has to come first.
% cntrl: sync: lockin synced to extern

global smdata;

for i = 1:length(instruments)
    ind = sminstlookup(instruments(i));
    
    switch smdata.inst(ind).device
        
        case 'SR830'        
            if nargin >=4 &&  strfind('cntrl', 
            n = round(log2(rate)) + 4;
            rate = 2^-(4-n);
            % allow ext trig?
            if n < 0 || n > 13
                error('Samplerate not supported by SR830');
            end
            
            fprintf(smdata.inst(ind).data.inst, 'REST; SEND 1; TSTR 0; SRAT %i', n);
            smdata.inst(ind).data.sampint = 1/rate;
            smdata.inst(ind).datadim(15:16, 1) = npoints;
            
        case 'TDS5104'
            fprintf(smdata.inst(ind).data.inst, 'DAT:ENC SRIB');
            fprintf(smdata.inst(ind).data.inst, 'HOR:MAI:SAMPLER %f', rate);
            if query(smdata.inst(ind).data.inst, 'HOR:MAI:SAMPLER?', '%s\n', '%f') < rate;
                fprintf(smdata.inst(ind).data.inst, 'HOR:MAI:SAMPLER %f', 2* rate);
            end

            rate = query(smdata.inst(ind).data.inst, 'HOR:MAI:SAMPLER?', '%s\n', '%f');

            fprintf(smdata.inst(ind).data.inst, 'HOR:RECO %d', npoints);
            if query(smdata.inst(ind).data.inst, 'HOR:RECO?', '%s\n', '%d') < npoints;
                fprintf(smdata.inst(ind).data.inst, 'HOR:RECO %d', 2*npoints);
            end

            npoints = query(smdata.inst(tds).data.inst, 'HOR:RECO?', '%s\n', '%d');
            fprintf(smdata.inst(tds).data.inst, 'DAT:STOP %d', npoints)
            fprintf(smdata.inst(tds).data.inst, 'DAT:START 1');            
            
        case 'HP34401A'
            samptime = .035; % minumum time per sample for dmm - heuristic and mode dependent

            if 1/rate < samptime
                trigdel = 0;
                rate = 1/samptime;
            else
                trigdel = 1/rate - samptime;
            end

            if npoints > 512
                error('More than 512 samples not supported by DMM. Correct and try again!\n');
            end
            fprintf(smdata.inst(ind).data.inst, 'TRIG:SOUR BUS');
            fprintf(smdata.inst(ind).data.inst, 'SAMP:COUN %d', npoints);
            fprintf(smdata.inst(ind).data.inst, 'TRIG:DEL %f', trigdel);
            smdata.inst(inst).datadim(2, 1) = npoints;

        case 'LeCroy'
            
            fprintf(smdata.inst(ind).data.inst, 'CFMT DEF9,BYTE,BIN;CORD LO;');
            
            sp = floor(50002/npoints);
            npoints = ceil(50002/sp);
            fprintf(smdata.inst(ind).data.inst, 'WFSU SP, %d', sp);

            fprintf(smdata.inst(ind).data.inst, 'TDIV %f', npoints /(rate * 10);
            tdiv = query(smdata.inst(ind).data.inst, 'TDIV?', '%s\n', '%*4c %f %*c');

            %if tdiv < % check for modifications of tdiv.
            rate = npoints / (tdiv * 10);

            smdata.inst(tds).datadim(1:4, 1) = npoints;

    end
end

lenrate = [npoints, rate];